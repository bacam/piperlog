#!/bin/bash

set -e

declare -a logcheckdirs
level=""
while getopts 'd:f:l:' opt
do case $opt in
   d) logcheckdirs+=("$OPTARG");;
   f) discard="$OPTARG";;
   l) level="$OPTARG";;
   ?) echo "Usage: piperlog-mkignore [-d <logcheck directory>] [ -f <discard file>]\n       [-l <level>]"
      exit 1;;
   esac
done
if [ ${#logcheckdirs[*]} -eq 0 ]; then
  logcheckdirs[0]=/etc/logcheck
fi
if [ -z "$level" ]; then
  if [ -f "$logcheckdir/logcheck.conf" ]; then
    level=$(source "$logcheckdir/logcheck.conf" && echo $REPORTLEVEL)
  else
    level=server
  fi
fi
case "$level" in
  'workstation')
    paths="violations.ignore.d ignore.d.server ignore.d.paranoid ignore.d.workstation" ;;
  'server')
    paths="violations.ignore.d ignore.d.server ignore.d.paranoid" ;;
  'paranoid')
    paths="violations.ignore.d ignore.d.paranoid" ;;
  '')
    paths="violations.ignore.d ignore.d.server ignore.d.paranoid" ;;
  *)
    echo "Level should be workstation, server or paranoid, was given: $level" >&2
    exit 1
    ;;
esac
for (( i=0 ; $i < ${#logcheckdirs[*]} ; i++ )); do \
  (echo "# -- Source: ${logcheckdirs[$i]}"; cd "${logcheckdirs[$i]}"; find $paths -type f | xargs cat); \
done \
 | if [ -z "$discard" ]; then
     piperlog-convert
   else
     piperlog-convert --discard "$discard"
   fi
